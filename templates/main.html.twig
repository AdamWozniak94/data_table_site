{% extends 'base.html.twig' %}

{% block stylesheets %}
    <style>
        .active a {
            pointer-events: none;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="row justify-content-center">
        <div class="col-10">
            <div class="card">
                <div class="row mt-5">
                    <div class="col-md-5 mx-auto">
                        <div class="input-group mb-3">
                            <input class="form-control border" type="search" placeholder="Type and press enter" id="search-input">
                        </div>
                    </div>
                </div>
                <table class="table table-sm table-striped table-bordered" id="main-table">
                    <thead>
                        <tr>
                            <th id="ref">Ref</th>
                            <th>Client Name</th>
                            <th id="regdate">Registration Date</th>
                            <th id="symbol">Symbol</th>
                            <th id="send_date">Send Date</th>
                            <th>Invoiced</th>
                        </tr>
                    </thead>
                    <tbody id="main-table-body">
                    </tbody>
                </table>
                <ul class="pagination" id="pagination">
                </ul>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        $(document).ready(function () {
            var tbody = document.getElementById('main-table-body');
            var pagination = document.getElementById('pagination');
            var searchInput = document.getElementById('search-input');
            var currentPage = 0;
            var orderBy = 'ref';
            var sortOrder = 'asc';
            var search = '';

            // remove old rows and insert new filled with fetched data + refresh page buttons
            function renderTable(data) {
                tbody.innerHTML = '';
                data.rows.forEach(function (rowData) {
                    var row = tbody.insertRow();

                    var refCell = row.insertCell();
                    refCell.innerHTML = rowData.ref;

                    var clientNameCell = row.insertCell();
                    clientNameCell.innerHTML = rowData.client_name;

                    var regDateCell = row.insertCell();
                    regDateCell.innerHTML = rowData.regdate;

                    var symbolCell = row.insertCell();
                    symbolCell.innerHTML = rowData.symbol;

                    var sendDateCell = row.insertCell();
                    sendDateCell.innerHTML = rowData.send_date;

                    var invoicedCell = row.insertCell();
                    if (rowData.invoiced === 0) {
                        invoicedCell.innerHTML = 'No';
                    } else {
                        invoicedCell.innerHTML = 'Yes';
                    }

                });
                pagination.innerHTML = '';
                for (let i = 1; i <= data.pages; i++) {
                    var li = document.createElement('li');
                    li.classList.add('page-item');
                    if (currentPage === i) {
                        li.classList.add('active');
                    }
                    var a = document.createElement('a');
                    a.classList.add('page-link');
                    a.setAttribute('href', '#');
                    a.innerText = i;
                    a.addEventListener('click', function () {getTableData(i, orderBy, sortOrder)} );
                    li.appendChild(a);
                    pagination.appendChild(li);
                }
            }

            //fetch data from json and call renderTable function
            function getTableData(page = 1, orderBy = 'ref', sortOrder = 'asc', search = '') {
                currentPage = page;
                $.ajax({
                    url: "{{ path('app_main_getpagedata') }}",
                    method: 'GET',
                    data: { page: page, limit: 20, orderBy: orderBy, sortOrder: sortOrder, search: search },
                    success: renderTable

                })
            }

            // change sorting options and rerender table
            $('th').click(function (event) {
                var id = event.target.id
                if (id) {
                    if (id === orderBy) {
                        if (sortOrder === 'asc') {
                            sortOrder = 'desc';
                        } else {
                            sortOrder = 'asc';
                        }
                    } else {
                        orderBy = id;
                        sortOrder = 'asc';
                    }
                    getTableData(currentPage, orderBy, sortOrder);
                }
            })

            // get search phrase and rerender table after pressing "Enter" key on the keyboard
            searchInput.addEventListener("keypress", function(event) {
                if (event.key === "Enter") {
                    search = event.target.value;
                    getTableData(currentPage, orderBy, sortOrder, search);
                }
            });

            // trigger table rendering after clicking on 'x' in search bar
            $('#search-input').on('search', function () {
                if($(this).val().length === 0){
                    getTableData(currentPage, orderBy, sortOrder);
                }
            });

            //initial render
            getTableData();

        })
    </script>
{% endblock %}